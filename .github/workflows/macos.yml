name: MacOS
on:
  push:
    branches: [ main ]
    paths-ignore:
      - '.github/**'
      - '!.github/workflows/macos.yml'
  pull_request:
    paths-ignore:
      - '.github/**'
      - '!.github/workflows/macos.yml'
jobs:
  build-macos:
    runs-on: macos-latest
    env:
      QT_VER: "6.4.0"
      AUTO_CACHING: "false"
      MACOSX_DEPLOYMENT_TARGET: "11.7"
      UNGUARDED: "-Werror=unguarded-availability-new"
      PREFIX: "/usr/local/macos"
    steps:
      - name: Get repository name
        run: echo "REPO_NAME=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV

      - name: Clone
        uses: actions/checkout@v3
        with:
          submodules: recursive
          path: ${{ env.REPO_NAME }}

      - name: Install dependencies
        run: |
          sudo chown -R `whoami`:admin /usr/local/share

          brew install automake libtool ninja shtool yasm pkg-config

      - name: Set up environment variables
        shell: bash
        run: |
          mkdir Libraries && cd Libraries
          echo "LibrariesPath=`pwd`" >> $GITHUB_ENV

      - name: Generate cache key
        run: |
          sudo xcode-select -s /Applications/Xcode.app/Contents/Developer

          xcodebuild -version > CACHE_KEY.txt
          if [ "$AUTO_CACHING" == "true" ]; then
            thisFile=$REPO_NAME/.github/workflows/macos.yml
            echo `md5 -q $thisFile` >> CACHE_KEY.txt
          fi
          echo "CACHE_KEY=`md5 -q CACHE_KEY.txt`" >> $GITHUB_ENV

      - name: Qt cache
        id: cache-qt
        uses: actions/cache@v3
        with:
          path: ${{ env.LibrariesPath }}/qt-build
          key: ${{ runner.OS }}-qt-${{ env.CACHE_KEY }}

      - name: Qt build
        if: steps.cache-qt.outputs.cache-hit != 'true'
        run: |
          cd $LibrariesPath

          git clone -b v$QT_VER --depth=1 git://code.qt.io/qt/qt5.git qt-sources
          cd qt-sources
          perl init-repository --module-subset=qtbase
          git submodule update qtbase

          ./configure \
          -prefix "$LibrariesPath/qt-build" \
          -release \
          -opensource \
          -confirm-license \
          -static \
          -opengl desktop \
          -no-openssl \
          -nomake examples \
          -nomake tests \
          -optimize-size \
          -platform macx-clang

          cmake --build . --parallel $NUMBER_OF_PROCESSORS
          cmake --install .

      - name: OpenAL Soft build
        run: |
          cd $REPO_NAME
          git submodule update --init submodules/openal-soft
          cd submodules/openal-soft/build

          CFLAGS="$UNGUARDED" CPPFLAGS="$UNGUARDED" cmake \
          -D CMAKE_INSTALL_PREFIX:PATH=$PREFIX \
          -D ALSOFT_EXAMPLES=OFF \
          -D LIBTYPE:STRING=STATIC -DCMAKE_OSX_ARCHITECTURES=x86_64 \
          -D CMAKE_OSX_DEPLOYMENT_TARGET:STRING=$MACOSX_DEPLOYMENT_TARGET ..

          make -j$(nproc)
          sudo make install

      - name: SoundBox build
        run: |
          cd $REPO_NAME

          cmake -GXcode -DCMAKE_PREFIX_PATH=$LibrariesPath/qt-build
          xcoderun='xcodebuild build -project soundbox.xcodeproj -scheme soundbox -destination "platform=macOS,arch=x86_64" -configuration Release'
          bash -c "$xcoderun"

      - uses: actions/upload-artifact@v3
        name: Upload artifact
        with:
          name: soundbox-macos
          path: ${{ env.REPO_NAME }}/Release
