name: Windows

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '.github/**'
      - '!.github/workflows/win.yml'
  pull_request:
    paths-ignore:
      - '.github/**'
      - '!.github/workflows/win.yml'
jobs:
  build-windows:
    runs-on: windows-latest
    env:
      VC: "call vcvars64.bat && cd Libraries"
      QT_VER: "6.4.0"
      AUTO_CACHING: "false"
    steps:
      - name: Get repository name
        shell: bash
        run: echo "REPO_NAME=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV

      - name: Clone
        uses: actions/checkout@v3
        with:
          path: ${{ env.REPO_NAME }}

      - name: Set up environment variables
        shell: bash
        run: |
          echo "C:\\Strawberry\\perl\\bin\\" >> $GITHUB_PATH
          echo "C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\VC\\Auxiliary\\Build\\" >> $GITHUB_PATH
          mkdir Libraries && cd Libraries
          echo "Convert unix path to win path"
          p=`pwd | sed 's#^/[d]#d:#g' |sed 's#/#\\\\#g'`
          echo "LibrariesPath=$p" >> $GITHUB_ENV

      - name: Save msbuild version
        shell: cmd
        run: |
          call vcvars64.bat
          msbuild -version > CACHE_KEY.txt

      - name: Generate cache key
        shell: bash
        run: |
          if [ "$AUTO_CACHING" == "true" ]; then
            thisFile=$REPO_NAME/.github/workflows/win.yml
            echo `md5sum $thisFile | awk '{ print $1 }'` >> CACHE_KEY.txt
          fi
          echo "CACHE_KEY=`md5sum CACHE_KEY.txt | awk '{ print $1 }'`" >> $GITHUB_ENV

      - name: Qt cache
        id: cache-qt
        uses: actions/cache@v3
        with:
          path: ${{ env.LibrariesPath }}/qt-build
          key: ${{ runner.OS }}-qt-${{ env.CACHE_KEY }}

      - name: Qt configure
        if: steps.cache-qt.outputs.cache-hit != 'true'
        shell: cmd
        run: |
          %VC%
          git clone -b v%QT_VER% --depth=1 git://code.qt.io/qt/qt5.git qt-sources
          cd qt-sources
          perl init-repository --module-subset=qtbase
          git submodule update qtbase
          configure ^
          -prefix "%LibrariesPath%\qt-build" ^
          -debug ^
          -opensource ^
          -confirm-license ^
          -static ^
          -static-runtime ^
          -qt-zlib ^
          -qt-libpng ^
          -qt-libjpeg ^
          -no-opengl ^
          -mp ^
          -skip webengine ^
          -nomake tools ^
          -nomake examples ^
          -nomake tests ^
          -platform win32-msvc

      - name: Qt build
        if: steps.cache-qt.outputs.cache-hit != 'true'
        shell: cmd
        run: |
          %VC%
          cd qt-sources
          cmake --build . --parallel %NUMBER_OF_PROCESSORS%
          cmake --install .

      - name: SDL cache
        id: cache-sdl
        uses: actions/cache@v3
        with:
          path: ${{ env.REPO_NAME }}/submodules/SDL
          key: ${{ runner.OS }}-sdl-${{ env.CACHE_KEY }}
      - name: SDL build
        if: steps.cache-sdl.outputs.cache-hit != 'true'
        shell: cmd
        run: |
          cd %REPO_NAME%
          git submodule update --init submodules\SDL
          cd %LibrariesPath%
          mkdir SDL-build
          cd SDL-build
          cmake -S %GITHUB_WORKSPACE%\%REPO_NAME%\submodules\SDL -B . -A x64 -DSDL_FORCE_STATIC_VCRT=ON
          cmake --build . --config Release --parallel
          cd ..
          move SDL-build %GITHUB_WORKSPACE%\%REPO_NAME%\submodules\SDL
          
      - name: FFmpeg cache
        id: cache-ffmpeg
        uses: actions/cache@v3
        with:
          path: ${{ env.REPO_NAME }}/submodules/FFmpeg
          key: ${{ runner.OS }}-FFmpeg-${{ env.CACHE_KEY }}-${{ hashFiles('soundbox/submodules/scripts/build_ffmpeg_win.sh') }}
      - name: FFmpeg build
        if: steps.cache-ffmpeg.outputs.cache-hit != 'true'
        shell: cmd
        run: |
          choco install --no-progress -y msys2 yasm
          cd %REPO_NAME%
          git submodule update --init submodules/FFmpeg
          cd submodules/FFmpeg
          %VC%
          set CHERE_INVOKING=enabled_from_arguments
          set MSYS2_PATH_TYPE=inherit
          call c:\tools\msys64\usr\bin\bash --login ../scripts/build_ffmpeg_win.sh

      - name: SoundBox build
        shell: cmd
        run: |
          cd %REPO_NAME%
          cmake -A x64 -DCMAKE_PREFIX_PATH=%LibrariesPath%\qt-build
          call vcvars64.bat
          msbuild -m soundbox.sln /nologo /p:Configuration=Debug

      - uses: actions/upload-artifact@v3
        name: Upload artifact
        with:
          name: soundbox-windows
          path: ${{ env.REPO_NAME }}\Debug\soundbox.exe
