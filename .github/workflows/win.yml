name: Windows

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '.github/**'
      - '!.github/workflows/win.yml'
  pull_request:
    paths-ignore:
      - '.github/**'
      - '!.github/workflows/win.yml'
jobs:
  build-windows:
    runs-on: windows-latest
    env:
      VC: "call vcvars32.bat && cd Libraries"
      QT_VER: "6.4.0"
      ONLY_CACHE: "false"
      MANUAL_CACHING: "2"
      AUTO_CACHING: "false"
    steps:
      - name: Get repository name
        shell: bash
        run: echo "REPO_NAME=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV

      - name: Clone
        uses: actions/checkout@v3
        with:
          path: ${{ env.REPO_NAME }}

      - name: Set up environment variables
        shell: bash
        run: |
          echo "C:\\Strawberry\\perl\\bin\\" >> $GITHUB_PATH
          echo "C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\VC\\Auxiliary\\Build\\" >> $GITHUB_PATH
          mkdir Libraries && cd Libraries
          echo "Convert unix path to win path"
          p=`pwd | sed 's#^/[d]#d:#g' |sed 's#/#\\\\#g'`
          echo "LibrariesPath=$p" >> $GITHUB_ENV
      - name: Save msbuild version
        shell: cmd
        run: |
          call vcvars32.bat
          msbuild -version > CACHE_KEY.txt
      - name: Generate cache key
        shell: bash
        run: |
          echo $MANUAL_CACHING >> CACHE_KEY.txt
          if [ "$AUTO_CACHING" == "true" ]; then
            thisFile=$REPO_NAME/.github/workflows/win.yml
            echo `md5sum $thisFile | awk '{ print $1 }'` >> CACHE_KEY.txt
          fi
          echo "CACHE_KEY=`md5sum CACHE_KEY.txt | awk '{ print $1 }'`" >> $GITHUB_ENV
      - name: Qt cache
        id: cache-qt
        uses: actions/cache@v3
        with:
          path: ${{ env.LibrariesPath }}/qt-build
          key: ${{ runner.OS }}-qt-${{ env.CACHE_KEY }}

      - name: Qt configure
        if: steps.cache-qt.outputs.cache-hit != 'true'
        shell: cmd
        run: |
          %VC%
          git clone -b v%QT_VER% --depth=1 git://code.qt.io/qt/qt5.git qt-sources
          cd qt-sources
          perl init-repository --module-subset=qtbase
          git submodule update qtbase
          configure ^
          -prefix "%LibrariesPath%\qt-build" ^
          -release ^
          -opensource ^
          -confirm-license ^
          -static ^
          -static-runtime ^
          -no-opengl ^
          -mp ^
          -skip webengine ^
          -nomake tools ^
          -nomake examples ^
          -nomake tests ^
          -optimize-size ^
          -platform win32-msvc
      - name: Qt build
        if: steps.cache-qt.outputs.cache-hit != 'true'
        shell: cmd
        run: |
          %VC%
          cd qt-sources
          cmake --build . --parallel %NUMBER_OF_PROCESSORS%
          cmake --install .
      - name: SoundBox build
        shell: cmd
        if: env.ONLY_CACHE == 'false'
        run: |
          cd %REPO_NAME%
          cmake -A Win32 -DCMAKE_PREFIX_PATH=%LibrariesPath%\qt-build
          call vcvars32.bat
          dir
          msbuild -m soundbox.sln /nologo /p:Configuration=Release,Platform=Win32
          dir Release
      - uses: actions/upload-artifact@v3
        name: Upload artifact
        with:
          name: soundbox-windows
          path: ${{ env.REPO_NAME }}\Release\soundbox.exe
